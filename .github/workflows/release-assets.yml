name: Upload Release Asset

on:
  push:
    tags:
    - 'v*' # "e.g. v0.4"
  
  workflow_dispatch:

env:
  NPROC: 2

jobs:
  build-and-upload:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13]
        arch: [amd64]
        include:
        - os: macos-13
          arch: arm64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    name: ${{ matrix.os }} - ${{ matrix.arch }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get submodules hash
        id: submodules
        run: |
          echo "hash=$(git submodule status | awk '{print $1}' | sort | shasum -a 256 | sed 's/[ -]*//g')" >> $GITHUB_OUTPUT

      - name: Cache submodules
        uses: actions/cache@v3
        with:
          path: |
            vendor/
            .git/modules
          key: ${{ runner.os }}-${{matrix.arch}}-submodules-${{ steps.submodules.outputs.hash }}

      - name: prep variables
        id: vars
        run: |
          NWAKU_ARTIFACT_NAME=$(echo "waku-${{matrix.arch}}-${{runner.os}}.tar.gz" | tr "[:upper:]" "[:lower:]")
          echo "waku=${NWAKU_ARTIFACT_NAME}" >> $GITHUB_OUTPUT

          if [[ "${{ runner.os }}" == "Linux" ]]; then
            LIBWAKU_ARTIFACT_NAME=$(echo "libwaku-0.1.0-${{matrix.arch}}-${{runner.os}}-linux.deb" | tr "[:upper:]" "[:lower:]")
          fi

          if [[ "${{ runner.os }}" == "macOS" ]]; then
              LIBWAKU_ARTIFACT_NAME=$(echo "libwaku-0.1.0-${{ matrix.arch }}-macos.tar.gz" | tr "[:upper:]" "[:lower:]")
          fi

          echo "libwaku=${LIBWAKU_ARTIFACT_NAME}" >> $GITHUB_OUTPUT

      - name: Install build dependencies
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y build-essential dpkg-dev
          fi

      - name: Build Waku artifacts
        run: |
          OS=$([[ "${{runner.os}}" == "macOS" ]] && echo "macosx" || echo "linux")

          make -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC} -d:disableMarchNative --os:${OS} --cpu:${{matrix.arch}}" V=1 update
          make -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC} -d:disableMarchNative --os:${OS} --cpu:${{matrix.arch}} -d:postgres" CI=false wakunode2
          make -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC} -d:disableMarchNative --os:${OS} --cpu:${{matrix.arch}}" CI=false chat2
          tar -cvzf ${{steps.vars.outputs.waku}} ./build/

          make -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC} -d:disableMarchNative --os:${OS} --cpu:${{matrix.arch}} -d:postgres" CI=false libwaku
          make -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC} -d:disableMarchNative --os:${OS} --cpu:${{matrix.arch}} -d:postgres" CI=false STATIC=1 libwaku

      - name: Create distributable libwaku package
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            rm -rf pkg
            mkdir -p pkg/DEBIAN pkg/usr/local/lib pkg/usr/local/include
            cp build/libwaku.so pkg/usr/local/lib/
            cp build/libwaku.a pkg/usr/local/lib/
            cp library/libwaku.h pkg/usr/local/include/

            echo "Package: waku" >> pkg/DEBIAN/control
            echo "Version: 0.1.0" >> pkg/DEBIAN/control
            echo "Priority: optional" >> pkg/DEBIAN/control
            echo "Section: libs" >> pkg/DEBIAN/control
            echo "Architecture: ${{matrix.arch}}" >> pkg/DEBIAN/control
            echo "Maintainer: Waku Team <ivansete@status.im>" >> pkg/DEBIAN/control
            echo "Description: Waku library" >> pkg/DEBIAN/control

            dpkg-deb --build pkg ${{steps.vars.outputs.libwaku}}
          fi

          if [[ "${{ runner.os }}" == "macOS" ]]; then
              LIBWAKU_ARTIFACT_NAME=$(echo "libwaku-0.1.0-${{ matrix.arch }}-macos.tar.gz" | tr "[:upper:]" "[:lower:]")
              tar -cvzf ${{steps.vars.outputs.libwaku}} ./build/libwaku.dylib ./build/libwaku.a ./library/libwaku.h
          fi

      - name: Upload waku artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: waku-0.1.0-${{ matrix.arch }}-${{ runner.os }}
          path: ${{ steps.vars.outputs.waku }}
          if-no-files-found: error

      - name: Upload libwaku artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: libwaku-0.1.0-${{ matrix.arch }}-${{ runner.os }}
          path: ${{ steps.vars.outputs.libwaku }}
          if-no-files-found: error
