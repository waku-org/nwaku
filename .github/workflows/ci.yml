name: ci

on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NPROC: 2
  MAKEFLAGS: "-j${NPROC}"
  NIMFLAGS: "--parallelBuild:${NPROC}"

jobs:
  changes: # changes detection
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
    - uses: actions/checkout@v3
      name: Checkout code
      id: checkout
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          common:
          - '.github/workflows/**'
          - 'vendor/**'
          - 'Makefile'
          - 'waku.nimble'

          v2:
          - 'waku/common/**'
          - 'waku/v2/**'
          - 'apps/**'
          - 'tools/**'
          - 'tests/all_tests_v2.nim'
          - 'tests/v2/**'

          legacy:
          - 'waku/v1/**'
          - 'tests/all_tests_v1.nim'
          - 'tests/v1/**'

          - 'waku/whisper/**'
          - 'tests/whisper/**'
          - 'tests/all_tests_whisper.nim'

    outputs:
      common: ${{ steps.filter.outputs.common }}
      v2: ${{ steps.filter.outputs.v2 }}
      legacy: ${{ steps.filter.outputs.legacy }}

  build-v2:
    needs: changes
    if: ${{ needs.changes.outputs.v2 == 'true' || needs.changes.outputs.common == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    name: build-v2-${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get submodules hash
        id: submodules
        run: |
          echo "hash=$(git submodule status | awk '{print $1}' | sort | shasum -a 256 | sed 's/[ -]*//g')" >> $GITHUB_OUTPUT

      - name: Cache submodules
        uses: actions/cache@v3
        with:
          path: |
            vendor/
            .git/modules
          key: ${{ runner.os }}-vendor-modules-${{ steps.submodules.outputs.hash }}

      - name: Build binaries
        run: make V=1 QUICK_AND_DIRTY_COMPILER=1 v2 tools

  test-v2:
    needs: changes
    if: ${{ needs.changes.outputs.v2 == 'true' || needs.changes.outputs.common == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    name: test-v2-${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get submodules hash
        id: submodules
        run: |
          echo "hash=$(git submodule status | awk '{print $1}' | sort | shasum -a 256 | sed 's/[ -]*//g')" >> $GITHUB_OUTPUT

      - name: Cache submodules
        uses: actions/cache@v3
        with:
          path: |
            vendor/
            .git/modules
          key: ${{ runner.os }}-vendor-modules-${{ steps.submodules.outputs.hash }}

      - name: Run tests
        run: |
          if [ ${{ runner.os }} == "macOS" ]; then
            brew unlink postgresql@14
            brew link libpq --force
          fi

          if [ ${{ runner.os }} == "Linux" ]; then
            sudo docker run --rm -d -e POSTGRES_PASSWORD=test123 -p 5432:5432 postgres:9.6-alpine
          fi

          make V=1 LOG_LEVEL=DEBUG QUICK_AND_DIRTY_COMPILER=1 test2 testwakunode2

  build-legacy:
    needs: changes
    if: ${{ needs.changes.outputs.legacy == 'true' || needs.changes.outputs.common == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    name: build-legacy-${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get submodules hash
        id: submodules
        run: |
          echo "hash=$(git submodule status | awk '{print $1}' | sort | shasum -a 256 | sed 's/[ -]*//g')" >> $GITHUB_OUTPUT

      - name: Cache submodules
        uses: actions/cache@v3
        with:
          path: |
            vendor/
            .git/modules
          key: ${{ runner.os }}-vendor-modules-${{ steps.submodules.outputs.hash }}

      - name: Build binaries
        run: make V=1 QUICK_AND_DIRTY_COMPILER=1 v1

  test-legacy:
    needs: changes
    if: ${{ needs.changes.outputs.legacy == 'true' || needs.changes.outputs.common == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    name: test-legacy-${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get submodules hash
        id: submodules
        run: |
          echo "hash=$(git submodule status | awk '{print $1}' | sort | shasum -a 256 | sed 's/[ -]*//g')" >> $GITHUB_OUTPUT

      - name: Cache submodules
        uses: actions/cache@v3
        with:
          path: |
            vendor/
            .git/modules
          key: ${{ runner.os }}-vendor-modules-${{ steps.submodules.outputs.hash }}

      - name: Run tests
        run: make V=1 LOG_LEVEL=DEBUG QUICK_AND_DIRTY_COMPILER=1 test1
